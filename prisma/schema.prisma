datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        Int        @id @default(autoincrement())
  fullName  String
  email     String     @unique
  password  String
  role      Role       @default(CUSTOMER)
  status    UserStatus @default(ACTIVE)
  createdAt DateTime   @default(now())
  updatedAt DateTime   @default(now()) @updatedAt

  products       Product[]
  customerOrders Order[]     @relation("CustomerOrders")
  vendorItems    OrderItem[] @relation("VendorOrderItems")
  adminLogs      AdminLog[]  @relation("AdminLogs")
}

model Product {
  id          Int       @id @default(autoincrement())
  name        String
  slug        String    @unique
  description String?
  price       Float
  stock       Int
  vendorId    Int
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @default(now()) @updatedAt

  vendor     User           @relation(fields: [vendorId], references: [id])
  images     ProductImage[]
  orderItems OrderItem[]
}

model ProductImage {
  id        Int     @id @default(autoincrement())
  url       String
  productId Int
  product   Product @relation(fields: [productId], references: [id])
}

model Order {
  id              Int         @id @default(autoincrement())
  orderNumber     String      @unique
  customerId      Int
  totalAmount     Float
  status          OrderStatus @default(PENDING)
  shippingAddress String
  shippingCity    String
  shippingZip     String
  shippingCountry String
  paymentMethod   String      @default("cod")
  paymentStatus   String      @default("pending")
  createdAt       DateTime    @default(now())
  updatedAt       DateTime    @default(now()) @updatedAt

  customer User        @relation("CustomerOrders", fields: [customerId], references: [id])
  items    OrderItem[]
}

model OrderItem {
  id        Int     @id @default(autoincrement())
  orderId   Int
  productId Int
  quantity  Int
  price     Float
  vendorId  Int

  order   Order   @relation(fields: [orderId], references: [id])
  product Product @relation(fields: [productId], references: [id])
  vendor  User    @relation("VendorOrderItems", fields: [vendorId], references: [id])
}

model AdminLog {
  id          Int      @id @default(autoincrement())
  adminId     Int
  action      String
  targetType  String
  targetId    Int
  description String?
  createdAt   DateTime @default(now())

  admin User @relation("AdminLogs", fields: [adminId], references: [id])
}

enum Role {
  CUSTOMER
  VENDOR
  ADMIN
}

enum UserStatus {
  ACTIVE
  SUSPENDED
  BANNED
}

enum OrderStatus {
  PENDING
  CONFIRMED
  SHIPPED
  DELIVERED
  CANCELLED
}